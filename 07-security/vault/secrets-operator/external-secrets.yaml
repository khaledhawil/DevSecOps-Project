apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets
  namespace: external-secrets
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: user-service
spec:
  provider:
    vault:
      server: "http://vault.vault.svc:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "user-service"
          serviceAccountRef:
            name: "user-service"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-credentials
  namespace: user-service
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: database-credentials
    creationPolicy: Owner
  data:
    - secretKey: username
      remoteRef:
        key: database/postgres
        property: username
    - secretKey: password
      remoteRef:
        key: database/postgres
        property: password
    - secretKey: connection_string
      remoteRef:
        key: database/postgres
        property: connection_string
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: jwt-secrets
  namespace: auth-service
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: jwt-secrets
    creationPolicy: Owner
  data:
    - secretKey: access_token_secret
      remoteRef:
        key: jwt/tokens
        property: access_token_secret
    - secretKey: refresh_token_secret
      remoteRef:
        key: jwt/tokens
        property: refresh_token_secret
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: api-keys
  namespace: notification-service
spec:
  refreshInterval: 12h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: api-keys
    creationPolicy: Owner
  data:
    - secretKey: twilio_account_sid
      remoteRef:
        key: api-keys/twilio
        property: account_sid
    - secretKey: twilio_auth_token
      remoteRef:
        key: api-keys/twilio
        property: auth_token
    - secretKey: smtp_password
      remoteRef:
        key: api-keys/smtp
        property: password
---
# ClusterSecretStore for cluster-wide secrets
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-cluster-backend
spec:
  provider:
    vault:
      server: "http://vault.vault.svc:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "external-secrets"
          serviceAccountRef:
            name: "external-secrets"
            namespace: "external-secrets"
