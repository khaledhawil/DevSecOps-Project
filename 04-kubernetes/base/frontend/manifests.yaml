apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        version: v1
    spec:
      serviceAccountName: frontend
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: frontend
        image: frontend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        env:
        - name: VITE_API_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: api-url
        - name: VITE_AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: auth-service-url
        - name: VITE_USER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: user-service-url
        - name: VITE_NOTIFICATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: notification-service-url
        - name: VITE_ANALYTICS_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: analytics-service-url
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: cache
          mountPath: /var/cache/nginx
        - name: run
          mountPath: /var/run
      volumes:
      - name: cache
        emptyDir: {}
      - name: run
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: frontend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  api-url: "http://api.devsecops.local"
  auth-service-url: "http://auth-service:3000"
  user-service-url: "http://user-service:8080"
  notification-service-url: "http://notification-service:5000"
  analytics-service-url: "http://analytics-service:8081"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/devsecops-dev-frontend-sa-role
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: frontend
