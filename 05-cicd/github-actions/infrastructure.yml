name: Infrastructure CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - '03-infrastructure/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '03-infrastructure/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to apply changes to'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      action:
        description: 'Terraform action'
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  TERRAFORM_VERSION: '1.6.0'
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: true

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format Check
        working-directory: 03-infrastructure
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: 03-infrastructure
        run: terraform init -backend=false

      - name: Terraform Validate
        working-directory: 03-infrastructure
        run: terraform validate

      - name: Run tflint
        uses: terraform-linters/setup-tflint@v4
      - run: |
          cd 03-infrastructure
          tflint --init
          tflint --recursive

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: 03-infrastructure
          soft_fail: true

      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: 03-infrastructure
          framework: terraform
          soft_fail: true

  plan-dev:
    name: Plan - Development
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request' || github.event.inputs.environment == 'dev'
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: 03-infrastructure
        run: terraform init

      - name: Terraform Plan
        working-directory: 03-infrastructure
        run: |
          terraform workspace select dev || terraform workspace new dev
          terraform plan -var-file=environments/dev.tfvars -out=tfplan

      - name: Upload plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-dev
          path: 03-infrastructure/tfplan

  apply-dev:
    name: Apply - Development
    runs-on: ubuntu-latest
    needs: plan-dev
    if: |
      github.ref == 'refs/heads/main' && 
      (github.event_name == 'push' || github.event.inputs.action == 'apply')
    environment:
      name: development
      url: https://dev.devsecops.local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: 03-infrastructure
        run: terraform init

      - name: Download plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan-dev
          path: 03-infrastructure

      - name: Terraform Apply
        working-directory: 03-infrastructure
        run: |
          terraform workspace select dev
          terraform apply -auto-approve tfplan

  plan-staging:
    name: Plan - Staging
    runs-on: ubuntu-latest
    needs: validate
    if: github.event.inputs.environment == 'staging'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: 03-infrastructure
        run: terraform init

      - name: Terraform Plan
        working-directory: 03-infrastructure
        run: |
          terraform workspace select staging || terraform workspace new staging
          terraform plan -var-file=environments/staging.tfvars -out=tfplan

      - name: Upload plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-staging
          path: 03-infrastructure/tfplan

  apply-staging:
    name: Apply - Staging
    runs-on: ubuntu-latest
    needs: plan-staging
    if: github.event.inputs.action == 'apply'
    environment:
      name: staging
      url: https://staging.devsecops.local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: 03-infrastructure
        run: terraform init

      - name: Download plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan-staging
          path: 03-infrastructure

      - name: Terraform Apply
        working-directory: 03-infrastructure
        run: |
          terraform workspace select staging
          terraform apply -auto-approve tfplan

  plan-prod:
    name: Plan - Production
    runs-on: ubuntu-latest
    needs: validate
    if: github.event.inputs.environment == 'prod'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: 03-infrastructure
        run: terraform init

      - name: Terraform Plan
        working-directory: 03-infrastructure
        run: |
          terraform workspace select prod || terraform workspace new prod
          terraform plan -var-file=environments/prod.tfvars -out=tfplan

      - name: Upload plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-prod
          path: 03-infrastructure/tfplan

  apply-prod:
    name: Apply - Production
    runs-on: ubuntu-latest
    needs: plan-prod
    if: github.event.inputs.action == 'apply'
    environment:
      name: production
      url: https://devsecops.local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: 03-infrastructure
        run: terraform init

      - name: Download plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan-prod
          path: 03-infrastructure

      - name: Terraform Apply
        working-directory: 03-infrastructure
        run: |
          terraform workspace select prod
          terraform apply -auto-approve tfplan
