name: Security Scanning

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - user-service
          - auth-service
          - notification-service
          - analytics-service
          - frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '02-services/${{ matrix.service }}'
          severity: 'CRITICAL,HIGH,MEDIUM'
          format: 'sarif'
          output: 'trivy-${{ matrix.service }}.sarif'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-${{ matrix.service }}.sarif'
          category: 'trivy-${{ matrix.service }}'

  container-scan:
    name: Container Image Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - user-service
          - auth-service
          - notification-service
          - analytics-service
          - frontend
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Scan ECR image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ matrix.service }}:latest
          format: 'sarif'
          output: 'trivy-image-${{ matrix.service }}.sarif'

      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-${{ matrix.service }}.sarif'
          category: 'trivy-image-${{ matrix.service }}'

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  infrastructure-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: 03-infrastructure
          format: sarif
          soft_fail: false

      - name: Upload tfsec results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: 03-infrastructure
          framework: terraform
          output_format: sarif
          output_file_path: checkov.sarif

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov.sarif

  kubernetes-scan:
    name: Kubernetes Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run kubesec
        uses: controlplaneio/kubesec-action@master
        with:
          input: 04-kubernetes/base/

      - name: Run Trivy on Kubernetes manifests
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '04-kubernetes/'
          format: 'sarif'
          output: 'trivy-k8s.sarif'

      - name: Upload Kubernetes scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-k8s.sarif'

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - user-service
          - auth-service
          - notification-service
          - analytics-service
          - frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@v0
        with:
          path: 02-services/${{ matrix.service }}
          format: spdx-json
          output-file: sbom-${{ matrix.service }}.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v3
        with:
          name: sbom-${{ matrix.service }}
          path: sbom-${{ matrix.service }}.spdx.json

  compliance-report:
    name: Generate Compliance Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, container-scan, secret-scan, infrastructure-scan, kubernetes-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate compliance summary
        run: |
          echo "# Security Compliance Report" > compliance-report.md
          echo "Generated: $(date)" >> compliance-report.md
          echo "" >> compliance-report.md
          echo "## Scans Completed" >> compliance-report.md
          echo "- Dependency vulnerability scanning" >> compliance-report.md
          echo "- Container image scanning" >> compliance-report.md
          echo "- Secret scanning" >> compliance-report.md
          echo "- Infrastructure as Code scanning" >> compliance-report.md
          echo "- Kubernetes manifest scanning" >> compliance-report.md
          echo "- SBOM generation" >> compliance-report.md

      - name: Upload compliance report
        uses: actions/upload-artifact@v3
        with:
          name: compliance-report
          path: compliance-report.md

      - name: Notify on failure
        if: failure()
        run: |
          echo "Security scan failed! Please review the results."
          # Add notification logic here (Slack, email, etc.)
