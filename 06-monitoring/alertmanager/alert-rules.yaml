apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-alert-rules
  namespace: monitoring
data:
  alert-rules.yml: |
    groups:
      - name: critical-alerts
        interval: 30s
        rules:
          # Service Down
          - alert: ServiceDown
            expr: up{job=~".*-service"} == 0
            for: 2m
            labels:
              severity: critical
              team: platform
            annotations:
              summary: "Service {{ $labels.job }} is down"
              description: "{{ $labels.job }} in namespace {{ $labels.namespace }} has been down for more than 2 minutes."

          # High Error Rate
          - alert: HighErrorRate
            expr: |
              (
                sum(rate(http_requests_total{status=~"5.."}[5m])) by (service, namespace) /
                sum(rate(http_requests_total[5m])) by (service, namespace)
              ) > 0.05
            for: 5m
            labels:
              severity: critical
              team: platform
            annotations:
              summary: "High error rate on {{ $labels.service }}"
              description: "{{ $labels.service }} in {{ $labels.namespace }} has error rate of {{ $value | humanizePercentage }} (threshold: 5%)"

          # Pod Crash Looping
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: critical
              team: platform
            annotations:
              summary: "Pod {{ $labels.pod }} is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is restarting frequently."

          # High Memory Usage
          - alert: HighMemoryUsage
            expr: |
              (
                container_memory_usage_bytes{namespace=~"devsecops-.*"} /
                container_spec_memory_limit_bytes{namespace=~"devsecops-.*"}
              ) > 0.9
            for: 5m
            labels:
              severity: critical
              team: platform
            annotations:
              summary: "High memory usage on {{ $labels.pod }}"
              description: "Container {{ $labels.container }} in pod {{ $labels.pod }} is using {{ $value | humanizePercentage }} of its memory limit."

          # High CPU Usage
          - alert: HighCPUUsage
            expr: |
              (
                rate(container_cpu_usage_seconds_total{namespace=~"devsecops-.*"}[5m]) /
                container_spec_cpu_quota{namespace=~"devsecops-.*"} * 100000
              ) > 90
            for: 5m
            labels:
              severity: critical
              team: platform
            annotations:
              summary: "High CPU usage on {{ $labels.pod }}"
              description: "Container {{ $labels.container }} in pod {{ $labels.pod }} is using {{ $value }}% of its CPU limit."

          # Persistent Volume Almost Full
          - alert: PersistentVolumeAlmostFull
            expr: |
              (
                kubelet_volume_stats_used_bytes /
                kubelet_volume_stats_capacity_bytes
              ) > 0.9
            for: 10m
            labels:
              severity: critical
              team: platform
            annotations:
              summary: "Persistent volume {{ $labels.persistentvolumeclaim }} almost full"
              description: "PVC {{ $labels.persistentvolumeclaim }} in {{ $labels.namespace }} is {{ $value | humanizePercentage }} full."

      - name: warning-alerts
        interval: 30s
        rules:
          # High Latency
          - alert: HighLatency
            expr: |
              histogram_quantile(0.95,
                sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service, namespace)
              ) > 1.0
            for: 10m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "High latency on {{ $labels.service }}"
              description: "{{ $labels.service }} in {{ $labels.namespace }} has P95 latency of {{ $value }}s (threshold: 1s)"

          # Database Connection Pool Near Limit
          - alert: DatabaseConnectionPoolNearLimit
            expr: |
              (
                db_connections_active /
                db_connections_max
              ) > 0.8
            for: 5m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "Database connection pool near limit for {{ $labels.service }}"
              description: "{{ $labels.service }} connection pool is {{ $value | humanizePercentage }} utilized (threshold: 80%)"

          # High Request Rate
          - alert: HighRequestRate
            expr: sum(rate(http_requests_total[5m])) by (service) > 1000
            for: 5m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "High request rate on {{ $labels.service }}"
              description: "{{ $labels.service }} is receiving {{ $value }} requests/second"

          # Disk Space Low
          - alert: DiskSpaceLow
            expr: |
              (
                node_filesystem_avail_bytes{mountpoint="/",fstype!="tmpfs"} /
                node_filesystem_size_bytes{mountpoint="/",fstype!="tmpfs"}
              ) < 0.2
            for: 10m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "Disk space low on {{ $labels.instance }}"
              description: "Disk space on {{ $labels.instance }} is {{ $value | humanizePercentage }} available (threshold: 20%)"

          # High Pod Memory Usage
          - alert: HighPodMemoryUsage
            expr: |
              (
                container_memory_usage_bytes{namespace=~"devsecops-.*"} /
                container_spec_memory_limit_bytes{namespace=~"devsecops-.*"}
              ) > 0.8
            for: 10m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "High memory usage on {{ $labels.pod }}"
              description: "Container {{ $labels.container }} is using {{ $value | humanizePercentage }} of memory (threshold: 80%)"

      - name: recording-rules
        interval: 30s
        rules:
          # Request rate per service
          - record: service:http_requests:rate5m
            expr: sum(rate(http_requests_total[5m])) by (service, namespace)

          # Error rate per service
          - record: service:http_errors:rate5m
            expr: |
              sum(rate(http_requests_total{status=~"5.."}[5m])) by (service, namespace) /
              sum(rate(http_requests_total[5m])) by (service, namespace)

          # P95 latency per service
          - record: service:http_request_duration:p95
            expr: |
              histogram_quantile(0.95,
                sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service, namespace)
              )

          # P99 latency per service
          - record: service:http_request_duration:p99
            expr: |
              histogram_quantile(0.99,
                sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service, namespace)
              )

          # Memory usage percentage per pod
          - record: pod:container_memory_usage:percentage
            expr: |
              container_memory_usage_bytes{namespace=~"devsecops-.*"} /
              container_spec_memory_limit_bytes{namespace=~"devsecops-.*"}

          # CPU usage percentage per pod
          - record: pod:container_cpu_usage:percentage
            expr: |
              rate(container_cpu_usage_seconds_total{namespace=~"devsecops-.*"}[5m]) /
              container_spec_cpu_quota{namespace=~"devsecops-.*"} * 100000
